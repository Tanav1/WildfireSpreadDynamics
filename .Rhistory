# model 1 regression and residual plots
regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = ISI)) +
geom_point() +  # Scatter plot of the data points
geom_smooth(method = "lm", col = "blue") +
labs(title = "Regression of ISI on FFMC", x = "FFMC", y = "ISI") +
theme_minimal()
#print(regression_plot)
cleaned_data <- cleaned_data %>%
mutate(fitted_values = fitted(model1),
residuals = resid(model1))
residuals_plot <- ggplot(cleaned_data, aes(x = fitted_values, y = residuals)) +
geom_point() +  # Scatter plot of residuals
geom_hline(yintercept = 0, col = "red", linetype = "dashed") +  # Horizontal line at y=0
labs(title = "Residuals vs Fitted Values", x = "Fitted Values", y = "Residuals") +
theme_minimal()
#print(residuals_plot)
grid.arrange(regression_plot, residuals_plot, ncol = 2)
grid.arrange( residuals_plot, log_residuals_plot, ncol = 2, nrow = 1)
# log model regression and residual plots
log_regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = log(ISI))) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +  # Regression line
labs(title = "Log-Linear Regression of log(ISI) on FFMC", x = "FFMC", y = "log(ISI)") +
theme_minimal()
#print(log_regression_plot)
cleaned_data <- cleaned_data %>%
mutate(log_fitted_values = fitted(log_model),
log_residuals = resid(log_model))
log_residuals_plot <- ggplot(cleaned_data, aes(x = log_fitted_values, y = log_residuals)) +
geom_point() +  # Scatter plot of residuals
geom_hline(yintercept = 0, col = "red", linetype = "dashed") +  # Horizontal line at y=0
labs(title = "Residuals vs Fitted Values for Log-Linear Model", x = "Fitted Values", y = "Residuals") +
theme_minimal()
#print(log_residuals_plot)
grid.arrange(log_regression_plot, log_residuals_plot, ncol = 2)
grid.arrange( regression_plot, log_regression_plot, ncol = 2, nrow = 1)
# log model regression and residual plots
log_regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = log(ISI))) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +  # Regression line
labs(title = "Log-Linear Regression of log(ISI) on FFMC", x = "FFMC", y = "log(ISI)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 10))
#print(log_regression_plot)
cleaned_data <- cleaned_data %>%
mutate(log_fitted_values = fitted(log_model),
log_residuals = resid(log_model))
log_residuals_plot <- ggplot(cleaned_data, aes(x = log_fitted_values, y = log_residuals)) +
geom_point() +  # Scatter plot of residuals
geom_hline(yintercept = 0, col = "red", linetype = "dashed") +  # Horizontal line at y=0
labs(title = "Residuals vs Fitted Values for Log-Linear Model", x = "Fitted Values", y = "Residuals") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 10))
#print(log_residuals_plot)
grid.arrange(log_regression_plot, log_residuals_plot, ncol = 2)
# model 1 regression and residual plots
regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = ISI)) +
geom_point() +  # Scatter plot of the data points
geom_smooth(method = "lm", col = "blue") +
labs(title = "Regression of ISI on FFMC", x = "FFMC", y = "ISI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 10))
#print(regression_plot)
cleaned_data <- cleaned_data %>%
mutate(fitted_values = fitted(model1),
residuals = resid(model1))
residuals_plot <- ggplot(cleaned_data, aes(x = fitted_values, y = residuals)) +
geom_point() +  # Scatter plot of residuals
geom_hline(yintercept = 0, col = "red", linetype = "dashed") +  # Horizontal line at y=0
labs(title = "Residuals vs Fitted Values", x = "Fitted Values", y = "Residuals") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 10))
#print(residuals_plot)
grid.arrange(regression_plot, residuals_plot, ncol = 2)
grid.arrange( regression_plot, log_regression_plot, ncol = 2, nrow = 1)
# log model regression and residual plots
log_regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = log(ISI))) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +  # Regression line
labs(title = "Log-Linear Regression of log(ISI) on FFMC", x = "FFMC", y = "log(ISI)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9))
#print(log_regression_plot)
cleaned_data <- cleaned_data %>%
mutate(log_fitted_values = fitted(log_model),
log_residuals = resid(log_model))
log_residuals_plot <- ggplot(cleaned_data, aes(x = log_fitted_values, y = log_residuals)) +
geom_point() +  # Scatter plot of residuals
geom_hline(yintercept = 0, col = "red", linetype = "dashed") +  # Horizontal line at y=0
labs(title = "Residuals vs Fitted Values for Log-Linear Model", x = "Fitted Values", y = "Residuals") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9))
#print(log_residuals_plot)
grid.arrange(log_regression_plot, log_residuals_plot, ncol = 2)
grid.arrange( regression_plot, log_regression_plot, ncol = 2, nrow = 1)
# model 1 regression and residual plots
regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = ISI)) +
geom_point() +  # Scatter plot of the data points
geom_smooth(method = "lm", col = "blue") +
labs(title = "Regression of ISI on FFMC", x = "FFMC", y = "ISI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9))
#print(regression_plot)
cleaned_data <- cleaned_data %>%
mutate(fitted_values = fitted(model1),
residuals = resid(model1))
residuals_plot <- ggplot(cleaned_data, aes(x = fitted_values, y = residuals)) +
geom_point() +  # Scatter plot of residuals
geom_hline(yintercept = 0, col = "red", linetype = "dashed") +  # Horizontal line at y=0
labs(title = "Residuals vs Fitted Values", x = "Fitted Values", y = "Residuals") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9))
#print(residuals_plot)
grid.arrange(regression_plot, residuals_plot, ncol = 2)
grid.arrange( regression_plot, log_regression_plot, ncol = 2, nrow = 1)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(corrplot)
library(hexbin)
library(gridExtra)
library(lmtest)
library(sandwich)
library(stargazer)
theme_set(theme_bw())
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("forestfires.csv")
# shape of the data
head(data)
# do any columns have null values
print(colSums(is.na(data)))
vars <- c("FFMC", "DMC", "DC", "ISI", "temp", "RH", "wind", "rain", "area")
cor_matrix <- cor(data[vars], use = "complete.obs")
corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45, mar=c(0,0,1,0), title = "Correlation Matrix of Forest Fire Variables")
ggplot(data, aes(x = FFMC, y = ISI)) +
geom_hex() +
scale_fill_viridis_c() +
theme_minimal() +
ggtitle("Relationship between FFMC and ISI")
# Detect Outlier in Column
detect_outlier <- function(x, threshold_multiplier = 4) {
Q1 <- quantile(x, probs = 0.25)
Q3 <- quantile(x, probs = 0.75)
IQR <- Q3 - Q1
outliers <- x > (Q3 + threshold_multiplier * IQR) | x < (Q1 - threshold_multiplier * IQR)
outliers
}
# Remove Outlier Function
remove_outlier <- function(dataframe, columns = names(dataframe)) {
for (col in columns) {
outliers <- detect_outlier(dataframe[[col]])
dataframe <- dataframe[!outliers, ]
}
dataframe
}
cleaned_data <- remove_outlier(data, c('FFMC', 'ISI'))
dim(cleaned_data)
ggplot(cleaned_data, aes(x = FFMC, y = ISI)) +
geom_hex() +
scale_fill_viridis_c() +
theme_minimal() +
ggtitle("Relationship between FFMC and ISI after Removing Outliers")
# First model
model1 <- lm(ISI ~ FFMC, data = cleaned_data)
summary(model1)
# model 1 regression and residual plots
regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = ISI)) +
geom_point(size = 2) +  # Scatter plot of the data points
geom_smooth(method = "lm", col = "blue") +
labs(title = "Regression of ISI on FFMC", x = "FFMC", y = "ISI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9))
#print(regression_plot)
cleaned_data <- cleaned_data %>%
mutate(fitted_values = fitted(model1),
residuals = resid(model1))
residuals_plot <- ggplot(cleaned_data, aes(x = fitted_values, y = residuals)) +
geom_point(size = 2) +  # Scatter plot of residuals
geom_hline(yintercept = 0, col = "red", linetype = "dashed") +  # Horizontal line at y=0
labs(title = "Residuals vs Fitted Values", x = "Fitted Values", y = "Residuals") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9))
#print(residuals_plot)
grid.arrange(regression_plot, residuals_plot, ncol = 2)
# model 1 regression and residual plots
regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = ISI)) +
geom_point(size = .5) +  # Scatter plot of the data points
geom_smooth(method = "lm", col = "blue") +
labs(title = "Regression of ISI on FFMC", x = "FFMC", y = "ISI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9))
#print(regression_plot)
cleaned_data <- cleaned_data %>%
mutate(fitted_values = fitted(model1),
residuals = resid(model1))
residuals_plot <- ggplot(cleaned_data, aes(x = fitted_values, y = residuals)) +
geom_point(size = 2) +  # Scatter plot of residuals
geom_hline(yintercept = 0, col = "red", linetype = "dashed") +  # Horizontal line at y=0
labs(title = "Residuals vs Fitted Values", x = "Fitted Values", y = "Residuals") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9))
#print(residuals_plot)
grid.arrange(regression_plot, residuals_plot, ncol = 2)
grid.arrange( regression_plot, log_regression_plot, ncol = 2, nrow = 1)
# model 1 regression and residual plots
regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = ISI)) +
geom_point() +  # Scatter plot of the data points
geom_smooth(method = "lm", col = "blue") +
labs(title = "Regression of ISI on FFMC", x = "FFMC", y = "ISI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9))
#print(regression_plot)
cleaned_data <- cleaned_data %>%
mutate(fitted_values = fitted(model1),
residuals = resid(model1))
residuals_plot <- ggplot(cleaned_data, aes(x = fitted_values, y = residuals)) +
geom_point() +  # Scatter plot of residuals
geom_hline(yintercept = 0, col = "red", linetype = "dashed") +  # Horizontal line at y=0
labs(title = "Residuals vs Fitted Values", x = "Fitted Values", y = "Residuals") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9))
#print(residuals_plot)
grid.arrange(regression_plot, residuals_plot, ncol = 2)
# log model regression and residual plots
log_regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = log(ISI))) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +  # Regression line
labs(title = "Log-Linear Regression of log(ISI) on FFMC", x = "FFMC", y = "log(ISI)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9))
#print(log_regression_plot)
cleaned_data <- cleaned_data %>%
mutate(log_fitted_values = fitted(log_model),
log_residuals = resid(log_model))
log_residuals_plot <- ggplot(cleaned_data, aes(x = log_fitted_values, y = log_residuals)) +
geom_point() +  # Scatter plot of residuals
geom_hline(yintercept = 0, col = "red", linetype = "dashed") +  # Horizontal line at y=0
labs(title = "Residuals vs Fitted Values for Log-Linear Model", x = "Fitted Values", y = "Residuals") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9))
#print(log_residuals_plot)
grid.arrange(log_regression_plot, log_residuals_plot, ncol = 2)
# model 1 regression and residual plots
regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = ISI)) +
geom_point() +  # Scatter plot of the data points
geom_smooth(method = "lm", col = "blue") +
labs(title = "Regression of ISI on FFMC", x = "FFMC", y = "ISI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9))
#print(regression_plot)
cleaned_data <- cleaned_data %>%
mutate(fitted_values = fitted(model1),
residuals = resid(model1))
residuals_plot <- ggplot(cleaned_data, aes(x = fitted_values, y = residuals)) +
geom_point() +  # Scatter plot of residuals
geom_hline(yintercept = 0, col = "red", linetype = "dashed") +  # Horizontal line at y=0
labs(title = "Residuals vs Fitted Values", x = "Fitted Values", y = "Residuals") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9))
#print(residuals_plot)
grid.arrange(regression_plot, residuals_plot, ncol = 2)
# log model regression and residual plots
log_regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = log(ISI))) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +  # Regression line
labs(title = "Log-Linear Regression of log(ISI) on FFMC", x = "FFMC", y = "log(ISI)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9))
#print(log_regression_plot)
cleaned_data <- cleaned_data %>%
mutate(log_fitted_values = fitted(log_model),
log_residuals = resid(log_model))
log_residuals_plot <- ggplot(cleaned_data, aes(x = log_fitted_values, y = log_residuals)) +
geom_point() +  # Scatter plot of residuals
geom_hline(yintercept = 0, col = "red", linetype = "dashed") +  # Horizontal line at y=0
labs(title = "Residuals vs Fitted Values for Log-Linear Model", x = "Fitted Values", y = "Residuals") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9))
#print(log_residuals_plot)
grid.arrange(log_regression_plot, log_residuals_plot, ncol = 2)
stargazer(log_model, type = "latex", title = "Log-Linear Regression Model Results", digits = 2, single.row = TRUE)
grid.arrange( regression_plot, log_regression_plot, ncol = 2, nrow = 1)
# log model regression and residual plots
log_regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = log(ISI))) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +  # Regression line
labs(title = "Log-Linear Regression of log(ISI) on FFMC", x = "FFMC", y = "log(ISI)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9))
#print(log_regression_plot)
cleaned_data <- cleaned_data %>%
mutate(log_fitted_values = fitted(log_model),
log_residuals = resid(log_model))
log_residuals_plot <- ggplot(cleaned_data, aes(x = log_fitted_values, y = log_residuals)) +
geom_point() +  # Scatter plot of residuals
geom_hline(yintercept = 0, col = "red", linetype = "dashed") +  # Horizontal line at y=0
labs(title = "Residuals vs Fitted Values for Log-Linear Model", x = "Fitted Values", y = "Residuals") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9))
#print(log_residuals_plot)
grid.arrange(log_regression_plot, log_residuals_plot, ncol = 2)
grid.arrange( residuals_plot, log_residuals_plot, ncol = 2, nrow = 1)
# log model regression and residual plots
log_regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = log(ISI))) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +  # Regression line
labs(title = "Log-Linear Regression of log(ISI) on FFMC", x = "FFMC", y = "log(ISI)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9)
axis.title = element_text(size = 6))
# log model regression and residual plots
log_regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = log(ISI))) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +  # Regression line
labs(title = "Log-Linear Regression of log(ISI) on FFMC", x = "FFMC", y = "log(ISI)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9),
axis.title = element_text(size = 6))
#print(log_regression_plot)
cleaned_data <- cleaned_data %>%
mutate(log_fitted_values = fitted(log_model),
log_residuals = resid(log_model))
log_residuals_plot <- ggplot(cleaned_data, aes(x = log_fitted_values, y = log_residuals)) +
geom_point() +  # Scatter plot of residuals
geom_hline(yintercept = 0, col = "red", linetype = "dashed") +  # Horizontal line at y=0
labs(title = "Residuals vs Fitted Values for Log-Linear Model", x = "Fitted Values", y = "Residuals") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9),
axis.title = element_text(size = 6))
#print(log_residuals_plot)
grid.arrange(log_regression_plot, log_residuals_plot, ncol = 2)
grid.arrange( regression_plot, log_regression_plot, ncol = 2, nrow = 1)
# log model regression and residual plots
log_regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = log(ISI))) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +  # Regression line
labs(title = "Log-Linear Regression of log(ISI) on FFMC", x = "FFMC", y = "log(ISI)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9),
axis.title = element_text(size = 7))
#print(log_regression_plot)
cleaned_data <- cleaned_data %>%
mutate(log_fitted_values = fitted(log_model),
log_residuals = resid(log_model))
log_residuals_plot <- ggplot(cleaned_data, aes(x = log_fitted_values, y = log_residuals)) +
geom_point() +  # Scatter plot of residuals
geom_hline(yintercept = 0, col = "red", linetype = "dashed") +  # Horizontal line at y=0
labs(title = "Residuals vs Fitted Values for Log-Linear Model", x = "Fitted Values", y = "Residuals") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9),
axis.title = element_text(size = 7))
#print(log_residuals_plot)
grid.arrange(log_regression_plot, log_residuals_plot, ncol = 2)
grid.arrange( residuals_plot, log_residuals_plot, ncol = 2, nrow = 1)
# model 1 regression and residual plots
regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = ISI)) +
geom_point() +  # Scatter plot of the data points
geom_smooth(method = "lm", col = "blue") +
labs(title = "Regression of ISI on FFMC", x = "FFMC", y = "ISI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9),
axis.title = element_text(size = 7))
#print(regression_plot)
cleaned_data <- cleaned_data %>%
mutate(fitted_values = fitted(model1),
residuals = resid(model1))
residuals_plot <- ggplot(cleaned_data, aes(x = fitted_values, y = residuals)) +
geom_point() +  # Scatter plot of residuals
geom_hline(yintercept = 0, col = "red", linetype = "dashed") +  # Horizontal line at y=0
labs(title = "Residuals vs Fitted Values", x = "Fitted Values", y = "Residuals") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9),
axis.title = element_text(size = 7))
#print(residuals_plot)
grid.arrange(regression_plot, residuals_plot, ncol = 2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(corrplot)
library(hexbin)
library(gridExtra)
library(lmtest)
library(sandwich)
library(stargazer)
theme_set(theme_bw())
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("forestfires.csv")
# shape of the data
head(data)
# do any columns have null values
print(colSums(is.na(data)))
vars <- c("FFMC", "DMC", "DC", "ISI", "temp", "RH", "wind", "rain", "area")
cor_matrix <- cor(data[vars], use = "complete.obs")
corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45, mar=c(0,0,1,0), title = "Correlation Matrix of Forest Fire Variables")
ggplot(data, aes(x = FFMC, y = ISI)) +
geom_hex() +
scale_fill_viridis_c() +
theme_minimal() +
ggtitle("Relationship between FFMC and ISI")
# Detect Outlier in Column
detect_outlier <- function(x, threshold_multiplier = 4) {
Q1 <- quantile(x, probs = 0.25)
Q3 <- quantile(x, probs = 0.75)
IQR <- Q3 - Q1
outliers <- x > (Q3 + threshold_multiplier * IQR) | x < (Q1 - threshold_multiplier * IQR)
outliers
}
# Remove Outlier Function
remove_outlier <- function(dataframe, columns = names(dataframe)) {
for (col in columns) {
outliers <- detect_outlier(dataframe[[col]])
dataframe <- dataframe[!outliers, ]
}
dataframe
}
cleaned_data <- remove_outlier(data, c('FFMC', 'ISI'))
dim(cleaned_data)
ggplot(cleaned_data, aes(x = FFMC, y = ISI)) +
geom_hex() +
scale_fill_viridis_c() +
theme_minimal() +
ggtitle("Relationship between FFMC and ISI after Removing Outliers")
# First model
model1 <- lm(ISI ~ FFMC, data = cleaned_data)
summary(model1)
# model 1 regression and residual plots
regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = ISI)) +
geom_point() +  # Scatter plot of the data points
geom_smooth(method = "lm", col = "blue") +
labs(title = "Regression of ISI on FFMC", x = "FFMC", y = "ISI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9),
axis.title = element_text(size = 7))
#print(regression_plot)
cleaned_data <- cleaned_data %>%
mutate(fitted_values = fitted(model1),
residuals = resid(model1))
residuals_plot <- ggplot(cleaned_data, aes(x = fitted_values, y = residuals)) +
geom_point() +  # Scatter plot of residuals
geom_hline(yintercept = 0, col = "red", linetype = "dashed") +  # Horizontal line at y=0
labs(title = "Residuals vs Fitted Values", x = "Fitted Values", y = "Residuals") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9),
axis.title = element_text(size = 7))
#print(residuals_plot)
#grid.arrange(regression_plot, residuals_plot, ncol = 2)
# Second Model with Log Transformation
log_model <- lm(log(ISI) ~ FFMC, data = cleaned_data)
summary(log_model)
# log model regression and residual plots
log_regression_plot <- ggplot(cleaned_data, aes(x = FFMC, y = log(ISI))) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +  # Regression line
labs(title = "Log-Linear Regression of log(ISI) on FFMC", x = "FFMC", y = "log(ISI)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9),
axis.title = element_text(size = 7))
#print(log_regression_plot)
cleaned_data <- cleaned_data %>%
mutate(log_fitted_values = fitted(log_model),
log_residuals = resid(log_model))
log_residuals_plot <- ggplot(cleaned_data, aes(x = log_fitted_values, y = log_residuals)) +
geom_point() +  # Scatter plot of residuals
geom_hline(yintercept = 0, col = "red", linetype = "dashed") +  # Horizontal line at y=0
labs(title = "Residuals vs Fitted Values for Log-Linear Model", x = "Fitted Values", y = "Residuals") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 9),
axis.title = element_text(size = 7))
#print(log_residuals_plot)
#grid.arrange(log_regression_plot, log_residuals_plot, ncol = 2)
grid.arrange( regression_plot, log_regression_plot, ncol = 2, nrow = 1)
grid.arrange( residuals_plot, log_residuals_plot, ncol = 2, nrow = 1)
stargazer(log_model, type = "latex", title = "Log-Linear Regression Model Results", digits = 2, single.row = TRUE)
vars <- c("FFMC", "DMC", "DC", "ISI", "temp", "RH", "wind", "rain", "area")
cor_matrix <- cor(data[vars], use = "complete.obs")
corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45, mar=c(0,0,1,0), title = "Correlation Matrix of Forest Fire Variables")
